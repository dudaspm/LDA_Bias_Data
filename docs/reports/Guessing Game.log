Traceback (most recent call last):
  File "c:\users\dudas\anaconda3\envs\wintest\lib\site-packages\jupyter_cache\executors\utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "c:\users\dudas\anaconda3\envs\wintest\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\dudas\anaconda3\envs\wintest\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "c:\users\dudas\anaconda3\envs\wintest\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "c:\users\dudas\anaconda3\envs\wintest\lib\asyncio\base_events.py", line 587, in run_until_complete
    return future.result()
  File "c:\users\dudas\anaconda3\envs\wintest\lib\site-packages\nbclient\client.py", line 554, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "c:\users\dudas\anaconda3\envs\wintest\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "c:\users\dudas\anaconda3\envs\wintest\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# guessingGame
# A python number guessing game
#
# Adam Lavely
# adam.lavely.psu@gmail.com
#
# Created for ICS Python Training Series
# Spring 2019
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# This is a number guessing game.  Python
# uses a random number generator to get
# a target between minVal and maxVal
# and then the guesser must guess this
# number using greater/less than clues.
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Load the modules we need

# Use random to get the random number 
import random as rd 

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Functions required

def guessChecker( guessVal ):
    # Function to verify that the guess an integer
    if guessVal.isdigit() == True:
        return True
    else:
        print("Bad input, please use an integer")
        return False
    
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Background info
minVal=1
maxVal=100
goodGuesses=1
ANSWER=rd.randint( minVal, maxVal)
answerRight = 'Nope'


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Play the game
print( "Guess an integer such that", minVal, " <= X <= ", maxVal )

while answerRight == 'Nope':
    
    # Get the guess
    
    guess = input("\nEnter an integer: ")
    
    # Check to make sure the guess is an integer
    goodAns = guessChecker( guess )
    
    # Yes an integer
    if goodAns == True:
        guessInt = int( guess ) 
        
        # Check to see if guess is above the answer 
        if guessInt > ANSWER:
            print("Answer is too high, please guess again")
            maxVal = guessInt
            goodGuesses = goodGuesses+1
            print( "Your current inclusive range is ", minVal, " - ", maxVal )
        elif guessInt < ANSWER:
            print("Answer is too low, please guess again")
            minVal = guessInt
            goodGuesses = goodGuesses+1
            print( "Your current inclusive range is ", minVal, " - ", maxVal )
        else:
            print("\nHurray, you guessed ", ANSWER, " in ", goodGuesses, " guesses! " )
            answerRight = 'Yep'
    
    # Not an integer
    else:
        print( "Please try again")    
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mStdinNotImplementedError[0m                  Traceback (most recent call last)
[1;32m<ipython-input-1-aef5f43d0892>[0m in [0;36m<module>[1;34m[0m
[0;32m     52[0m     [1;31m# Get the guess[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m     53[0m [1;33m[0m[0m
[1;32m---> 54[1;33m     [0mguess[0m [1;33m=[0m [0minput[0m[1;33m([0m[1;34m"\nEnter an integer: "[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     55[0m [1;33m[0m[0m
[0;32m     56[0m     [1;31m# Check to make sure the guess is an integer[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m

[1;32mc:\users\dudas\anaconda3\envs\wintest\lib\site-packages\ipykernel\kernelbase.py[0m in [0;36mraw_input[1;34m(self, prompt)[0m
[0;32m    844[0m         [1;32mif[0m [1;32mnot[0m [0mself[0m[1;33m.[0m[0m_allow_stdin[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    845[0m             raise StdinNotImplementedError(
[1;32m--> 846[1;33m                 [1;34m"raw_input was called, but this frontend does not support input requests."[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    847[0m             )
[0;32m    848[0m         return self._input_request(str(prompt),

[1;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.
StdinNotImplementedError: raw_input was called, but this frontend does not support input requests.

